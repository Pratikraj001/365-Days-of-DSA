// ( --- https://leetcode.com/problems/search-insert-position/ --- )



class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low  =0 ;
        int high = nums.size()-1;
        int mid = 0;
        int lowBreak= 0 , highBreak =0;
        while(low <= high){
            mid = low + (high - low)/2;
            lowBreak= 0 , highBreak =0;
            cout<<low<<" "<<high<<"\n";
            if(nums[mid] == target){
                return mid;
            }
            if(nums[mid] < target){
                low = mid+1;
                lowBreak = 1;
            }
            else if(nums[mid] > target){
                high = mid-1;
                highBreak = 1;
            }
            cout<<low<<" "<<high<<"\n";
            
        }
        if(nums[0] > target || highBreak == 1) return mid;
        return mid+1;
    }
};
