// ( --- https://leetcode.com/problems/next-permutation/ --- )



class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int i;
        for(i = n-1 ; i > 0 ; i--){
            if(nums[i] > nums[i-1]){
                break;
            } 
        }
        
        if(i == 0) {
            sort(nums.begin(),nums.end());
            return;
        }
        int small = i-1;
        int inflationPoint = i;
        int temp = inflationPoint;
        
        for(i = n-1 ; i > inflationPoint ; i--){
            if(nums[i] > nums[small] && nums[i] < nums[temp]){
                temp = i;
            }
        }
        // int t = nums[temp];
        swap(nums[temp],nums[small]);
        //  nums[temp] = nums[small];
        // nums[small] = t;
        // small++;
        sort(nums.begin()+inflationPoint , nums.end());
        return ;
    }
};
