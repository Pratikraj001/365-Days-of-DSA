// https://leetcode.com/problems/container-with-most-water/


class Solution {
    public int maxArea(int[] height) {
        int len = height.length;
        int res = 0;
        int left = 0 ;
        int right = len-1;
        int area = 0;
        while(left < right){
            area = (right - left) * Math.min(height[left] , height[right]);
            res = Math.max(res , area);
            
            if(height[left] < height[right]){
                left += 1;
            }
            else {
                right -= 1;
            }
        }
        return res;
    }
}

c++ code 

class Solution {
public:
    int maxArea(vector<int>& height) {
        int max = INT_MIN;
        int l =0 , r = height.size()-1;
        while(l < r){
            int a = ((r+1)-(l+1)) * min(height.at(l) , height.at(r));
            // cout<<a<<"\n";
            if(a > max){
               max =a;
            }
            if(height.at(l) >= height.at(r)){
                r--;
            }
           
            else
                l++;
        }
        return max;
    }
};
